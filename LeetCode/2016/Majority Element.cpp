#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;

// class Solution {
// public:
//     int majorityElement(vector<int>& nums) {
//         map<int,int> arr;
//         int n = nums.size();
//         for(int i = 0; i < n; i++)
//         	if(++arr[nums[i]] > n / 2)
//         		return nums[i];
//     }
// };

// class Solution {
// public:
//     int majorityElement(vector<int>& nums) {
//         map<int, int> counts; 
//         int n = nums.size();
//         for (int i = 0; i < n; i++)
//             if (++counts[nums[i]] > n / 2)
//                 return nums[i];
//     }
// };

class Solution
{
public:
	int majorityElement(vector<int>& nums){
		int n = nums.size();
		sort(nums.begin(), nums.end());
		return nums[n / 2 - (!(n % 2))];
	}
	
};

int main()
{
	vector<int> nums = {};
	Solution su;
	cout << su.majorityElement(nums) << endl;
	return 0;
}